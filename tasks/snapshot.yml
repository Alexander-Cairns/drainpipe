version: '3'

vars:
  PREPARE_DIRECTORY: |
    rm -rf .git
    git init
    mv .drainpipeignore .gitignore
    # Override global gitignore
    git config core.excludesFile .gitignore
    git add .
    git clean -ffdX
    rm .gitignore

tasks:
  directory:
    desc: "Creates a snapshot of the current working directory with .git, .gitignore, files in .drainpipeignore, and .drainpipeignore itself excluded. The target directory should be provided as a cli argument e.g. task snapshot:directory -- /tmp/release"
    cmds:
      - if [ -d "{{.CLI_ARGS}}" ] || [ "" == "{{.CLI_ARGS}}" ]; then echo "Please provide a path to a directory that does not yet exist" && exit 1; fi
      - cp -R . {{.CLI_ARGS}}
      - if [ ! -f ".drainpipeignore" ]; then echo ".drainpipeignore does not exist" && touch {{.CLI_ARGS}}/.drainpipeignore; fi
      - |
        cd {{.CLI_ARGS}}
        {{ .PREPARE_DIRECTORY }}
        rm -rf .git
  archive:
    silent: true
    desc: "Creates a snapshot of the current working directory as an archive. Format options are tar, tar.gz, or zip. Usage: task snapshot:archive format=zip > ~/archive.zip"
    cmds:
      - |
        TMP_DIR=$(mktemp -d)
        cp -R . $TMP_DIR
        if [ ! -f ".drainpipeignore" ]; then echo ".drainpipeignore does not exist" && touch $TMP_DIR/.drainpipeignore; fi
        cd $TMP_DIR
        {{ .PREPARE_DIRECTORY }}
        git config user.email 'no-reply@lullabot.com'
        git config user.name 'Lullabot Drainpipe'
        git commit -m "Initial commit" --no-gpg-sign
        git archive --format={{.format}} HEAD
